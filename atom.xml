<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Cyanny's Live]]></title>
  <link href="http://lgrcyanny.github.com/atom.xml" rel="self"/>
  <link href="http://lgrcyanny.github.com/"/>
  <updated>2012-09-07T13:22:45+08:00</updated>
  <id>http://lgrcyanny.github.com/</id>
  <author>
    <name><![CDATA[Cyanny Liang]]></name>
    <email><![CDATA[lgrcyanny@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Heap sort]]></title>
    <link href="http://lgrcyanny.github.com/blog/2012/09/06/heap-sort/"/>
    <updated>2012-09-06T20:55:00+08:00</updated>
    <id>http://lgrcyanny.github.com/blog/2012/09/06/heap-sort</id>
    <content type="html"><![CDATA[<p>最近面试，考试之类的都在准备数据结构的东西，不断重复的写快排和堆排的代码，现在把这些东西都记录下来，有备无患咯
本文主要是堆排的算法。
堆排算法思想：
1. 采用数组来表示堆
2. 构建最大堆
3. 将堆的第一个元素（最大的元素）和最后一个元素交换，然后从堆的第一个元素开始到倒数第二的元素，构建最大堆；
   再交换第一个元素和倒数第二个元素，然后从堆的第一个元素到倒数第三个元素构建最大堆&#8230;以此类推，直到结束</p>

<!-- more -->


<p>Liquid error: No such file or directory - python -c &#8220;import sys; print sys.executable&#8221;</p>
]]></content>
  </entry>
  
</feed>
